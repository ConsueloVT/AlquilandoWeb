@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IServicioSesion ServicioSesion

<div class="page">
    <div class="sidebar text-white"
        style="background: url('/imagenes/departamentoA.jpg') center center / cover no-repeat; height: 100vh;">
        <div class="sidebar-overlay d-flex flex-column h-100">
            <!-- Encabezado con logo -->
            <div class="d-flex align-items-center justify-content-center mb-4">
                <img src="logo.jpg" alt="Logo"
                    style="width: 40px; height: 40px; object-fit: contain; margin-right: 10px;" />
                <h3 class="m-0">AlquilandoWeb</h3>
            </div>

            <!-- Navegación -->
            <nav class="nav flex-column mb-4">
                <NavLink class="nav-link text-white" href="">🏠 Inicio</NavLink>
                <NavLink class="nav-link text-white" href="/buscar">🔍 Buscar</NavLink>
            </nav>
        </div>
    </div>

 <main>
<div class="top-row px-4">
 <nav class="d-flex justify-content-end align-items-center gap-2">

    @if (rol==RolUsuario.Administrador || rol==RolUsuario.Usuario)
    {
        <a href="/" class="nav-link">Cuenta</a>
        <button class="nav-link btn btn-link" @onclick="CerrarSesion">Cerrar sesión</button>
    }
    else
    {
        <a href="/Registrarse" class="nav-link">Registrarse</a>
        <a href="/IniciarSesion" class="nav-link">Iniciar sesión</a>
    }
</nav>
 </div>
         <article class="content px-4">
            @Body
        </article>
  </main>

</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    public RolUsuario rol => ServicioSesion.Rol;

    private void CerrarSesion()
    {
        ServicioSesion.Logout();
        NavigationManager.NavigateTo("/");
    }
    private bool _usuarioInicializado = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_usuarioInicializado)
        {
            await ServicioSesion.InicializarUsuarioAsync();
            _usuarioInicializado = true;
            StateHasChanged(); // Refresca la UI si es necesario
        }
    }
}