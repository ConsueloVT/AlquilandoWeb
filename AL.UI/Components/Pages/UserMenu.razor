@using AL.Aplicacion.Entidades
@inject IServicioSesion Sesion
@inject NavigationManager Nav



<div class="top-row px-4">
    <header class="d-flex justify-content-end p-2">
        <!-- Menú de usuario -->
        <div class="ms-5">
            <a href="/misreservas" class="btn btn-secondary me-2">Cuenta</a>
            <button @onclick="CerrarSesion" class="btn btn-primary">Cerrar Sesión</button>
        </div>
    </header>
</div>


@code {

    private Usuario? usuario;
    private string UsuarioIniciales = "US";
    private RolUsuario rol => Sesion.Rol;
    private bool _usuarioInicializado = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender && !_usuarioInicializado){   
           
            await Sesion.InicializarUsuarioAsync(); 
            _usuarioInicializado = true;    
            usuario = await Sesion.GetValue<Usuario>("usuarioLogueado");
            if (usuario != null && !string.IsNullOrWhiteSpace(usuario.Nombre))
            {
                var partes = usuario.Nombre.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                UsuarioIniciales = string.Concat(partes.Select(p => p[0])).ToUpper();
            }
             _usuarioInicializado = true;
            //await JS.InvokeVoidAsync("initDropdowns"); @inject IJSRuntime JS
            StateHasChanged();
        }

    }

    private async Task CerrarSesion()
    {
        await Sesion.LogoutAsync();
        Nav.NavigateTo("/", forceLoad: true);
    }

    /*{
    @if (Sesion.Rol == RolUsuario.Usuario)
{
    <div class="top-row px-4">
        <header class="d-flex justify-content-end p-2">
            <!-- Menú de usuario -->
            <div class="ms-5">
                <a href="/CuentaAdministrador" class="btn btn-secondary me-2">Cuenta</a>
                    <button @onclick="CerrarSesion" class="btn btn-primary">Cerrar Sesión</button>
            </div>
        </header>
    </div>
}*/
}
