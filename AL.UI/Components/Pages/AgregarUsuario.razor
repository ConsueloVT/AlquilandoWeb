@page "/Registrarse"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject UsuarioAlta UsuarioAlta
@inject IHashService HashService
@inject IUsuarioRepositorio IUsuarioRepositorio
@inject ITarjetaRepositorio ITarjetaRepositorio
@inject IUsuarioValidador IUsuarioValidador
@inject IServicioSesion UserService

<h3>Registrarse</h3>
<form>
    <p>Nombre: <input placeholder="Nombre" @bind="_usuario.Nombre" class="form-control" required type="text"></p>
    <p>Apellido: <input placeholder="Apellido" @bind="_usuario.Apellido" class="form-control" required type="text"></p>
    <p>Edad:<input placeholder="Edad" @bind="_usuario.Edad" class="form-control" required type="number"></p>
    <p>Email: <input placeholder="Email" @bind="_usuario.CorreoElectronico" class="form-control" required type="email"></p>
    <p>Contraseña: <input placeholder="Contraseña" @bind="_password" type="password" class="form-control"></p>
</form>
<h4>Tarjeta</h4>
<form>
    <p>Numero: <input placeholder="Numero" @bind="_tarjeta.Numero" class="form-control" required type="number"></p>
    <p>Nombre del Titular: <input placeholder="Nombre Titular" @bind="_tarjeta.NombreTitular" class="form-control" required type="text"> </p>
    <p>Fecha de Vencimiento: <input type ="date" placeholder ="Fecha de vencimiento" @bind="_tarjeta.FechaVencimiento" class="form-control" required/></p>
    <p>Codigo de Seguridad:<input placeholder="Codigo de seguridad" @bind="_tarjeta.CodigoSeguridad" class="form-control" required type="number"></p>
</form>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}

@if (!string.IsNullOrEmpty(SuccessMessage))
{
    <div class="alert alert-success" role="alert">
        @SuccessMessage
    </div>
}

<div class="container">
    <button class="btn btn-primary" @onclick="RegistrarUsuario">Aceptar</button>
    <button @onclick="VolverHome" class="btn btn-primary">Inicio</button>
</div>

@code {
    private int id_Usuario => UserService.Id;

    Usuario _usuario = new Usuario();
    Tarjeta _tarjeta = new Tarjeta();
    string _password = string.Empty;
    String ErrorMessage { get; set; }=null!;
    String SuccessMessage {get;set;}=null!;

    private void RegistrarUsuario()
    {
        try
        {
            // Generar hash y sal para la contraseña ingresada
            (string hash, string sal) = HashService.CreateHash(_password);
            _usuario.HashContraseña = hash;
            _usuario.SalContraseña = sal;
        
            // Ejecutar el caso de uso para agregar el usuario
            UsuarioAlta.Ejecutar(_usuario,_tarjeta);
        
            // Limpiar variables después de registrar correctamente
            //_usuario = new Usuario();
            //_password = string.Empty; // Limpiar contraseña también si es necesario
        
            // Mensaje de éxito
            ErrorMessage = ""; 
            SuccessMessage = "Usuario registrado con éxito. Inicie Sesion";
        }
        catch (Exception ex)
        {   
            SuccessMessage = "";
            ErrorMessage = $"Error al registrar usuario: {ex.Message}";
            Console.WriteLine($"Exception: {ex}");

        }
    }

    private void VolverHome()
    {
        if(id_Usuario==1){
            NavigationManager.NavigateTo("/");//Va ahi si el administrador fue el que registró al nuevo usuario.
        }
        else{
            NavigationManager.NavigateTo("/"); // Vuelve al Home
        }
    }

}